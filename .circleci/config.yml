version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  codecov: codecov/codecov@1.1.1

workflows:
  test:
    jobs:
      - test:
          context: test
  test_and_deploy:
    jobs:
      - test:
          context:  test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy:
          context: pypi
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:
  test:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: "Prep Google credentials"
          command: |
            mkdir -p "/home/circleci/.secrets/"
            echo "$GOOGLE_APPLICATION_CREDENTIALS" | base64 --decode > "/home/circleci/.secrets/gcs.json"
      - run:
          name: "Collecting requirements"
          command: |
            pip install pytest
            pip install -r requirements.txt
            pip install -e .
      - run:
          name: "Running tests"
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS=/home/circleci/.secrets/gcs.json
            pytest --cov-report=xml --cov=./
      - codecov/upload:
          file: coverage.xml
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - slack/status:
          fail_only: true
          webhook: $SLACK_WEBHOOK

  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: "Init .pypirc"
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $TWINE_PASSWORD" >> ~/.pypirc
      - run:
          name: "Create a source distribution & wheel"
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: "Install twine via pip"
          command: |
            pip install twine
      - run:
          name: "Upload dist to PyPi"
          command: |
            twine upload dist/*
      - slack/status:
          fail_only: true
          webhook: $SLACK_WEBHOOK

